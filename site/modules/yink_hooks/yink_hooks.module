<?php

/**
 * ProcessWire 'Hello world' demonstration module
 *
 * Demonstrates the Module interface and how to add hooks.
 * 
 * See README file for further links regarding module development.
 * 
 * ProcessWire 2.x 
 * Copyright (C) 2015 by Ryan Cramer 
 * This file licensed under Mozilla Public License v2.0 http://mozilla.org/MPL/2.0/
 * 
 * https://processwire.com
 *
 */

class yink_hooks extends WireData implements Module {

	/**
	 * getModuleInfo is a module required by all modules to tell ProcessWire about them
	 *
	 * @return array
	 *
	 */
	public static function getModuleInfo() {

		return array(

			// The module'ss title, typically a little more descriptive than the class name
			'title' => 'Hooks from Yinka ', 

			// version number 
			'version' => 1, 

			// summary is brief description of what this module is
			'summary' => 'Module that hooks into the processwire system',
			
			// Optional URL to more information about the module
			'href' => 'http://myhilarious.com',

			// singular=true: indicates that only one instance of the module is allowed.
			// This is usually what you want for modules that attach hooks. 
			'singular' => true, 

			// autoload=true: indicates the module should be started with ProcessWire.
			// This is necessary for any modules that attach runtime hooks, otherwise those
			// hooks won't get attached unless some other code calls the module on it's own.
			// Note that autoload modules are almost always also 'singular' (seen above).
			'autoload' => true, 
		
			// Optional font-awesome icon name, minus the 'fa-' part
			'icon' => 'smile-o', 
			);
	}

	/**
	 * Initialize the module
	 *
	 * ProcessWire calls this when the module is loaded. For 'autoload' modules, this will be called
	 * when ProcessWire's API is ready. As a result, this is a good place to attach hooks. 
	 *
	 */
    public function init() {
    $this->addHookAfter('LazyCron::every5Minutes', $this, 'delete_songs'); 
    }
    
    public function delete_songs($value){
       // echo 'sssssss';
    TemplateEngine::get2('yink_song');
    $now  = time();
    $songs = wire('pages')->find('template=song, unpaid>=1');
    foreach ($songs as $v) {
    if($now >= $v->unpaid){
        wire('pages')->delete($v, true);
    }
    }
    
    }
	
}
